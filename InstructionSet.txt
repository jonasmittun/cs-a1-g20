//  Standard Instruction Set
//  Dash (-) indicates mandatory instructions to implement
00: NOP              |   Does nothing       -
//Arithmetic, n = integer
01: ADD  R1  R2  R3  |   R1 = R2 + R3       -
02: ADDI R1  R2   n  |   R1 = R2 + n        -
03: SUB  R1  R2  R3  |   R1 = R2 - R3       -
04: SUBI R1  R2   n  |   R1 = R2 - n        -
05: MUL  R1  R2  R3  |   R1 = R2 * R3       -
06: MULI R1  R2   n  |   R1 = R2 * n
07: DIV  R1  R2  R3  |   R1 = R2 / R3
08: DIVI R1  R2   n  |   R1 = R2 / n
09: MOD  R1  R2  R3  |   R1 = R2 % R3
10: MODI R1  R2   n  |   R1 = R2 % n
//Logical
11: OR   R1  R2  R3  |   R1 = R2 or R3      -
12: AND  R1  R2  R3  |   R1 = R2 and R3     -
13: NOT  R1  R2      |   R1 = not(R2)       -
14: XOR  R1  R2  R3  |   R1 = R2 or R3 but not both
15: NAND R1  R2  R3  |   R1 = not(R2 and R3)
16: NOR  R1  R2  R3  |   R1 = not(R2 or R3)
17: XNOR R1  R2  R3  |   R1 = not(R2 or R3 but not both)
??: Shift bits left
??: Shift bits right
//Data transfer
18: SET  R1  n       |   R1 = n             -
19: LDD  R1  R2      |   R1 = Memory(R2)    -
20: STR  R1  R2      |   Memory(R1) = R2    -
//Flow
21: JMP  R1          |   Jump to line R1    -
22: JEQ  R1  R2  R3  |   JMP R1 if R2 = R3  -
23: JGT  R1  R2  R3  |   JMP R1 if R2 > R3  -
24: JLT  R1  R2  R3  |   JMP R1 if R2 < R3  -
25: JNQ  R1  R2  R3  |   JMP R1 if R2 != R3
26: JEGT R1  R2  R3  |   JMP R1 if R2 >= R3
27: JELT R1  R2  R3  |   JMP R1 if R2 =< R3
//
31: END              |   Terminate          -